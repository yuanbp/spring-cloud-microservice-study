spring:
  profiles:
    active: dev
---
server:
    port: 8000
spring:
  profiles: dev
  application:
    name: microservice-provider-user # 项目名称尽量用小写
  datasource: # 指定数据源
    platform: mysql # 指定数据源类型
    url: jdbc:mysql://127.0.0.1:3306/springcloud
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 10
    minIdle: 5
    maxActive: 30
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #connectionProperties: druid.stat.mergeSql: true;druid.stat.slowSqlMillis: 5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
mybatis:
  config-location: classpath:/mybatis/mybatis-config.xml
  mapper-locations: classpath*:/mapper/*.xml
  type-aliases-package: com.itmuch.cloud.entity
  check-config-location: true
logging:
  level:
    root: INFO
    com.itmuch.cloud: INFO
    #DEBUG输出SQL并打印到控制台
    com.mybatis: DEBUG
    com.mybatis.common.jdbc.SimpleDataSource: DEBUG
    com.mybatis.common.jdbc.ScriptRunner: DEBUG
    com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate: DEBUG
    java.sql.Connection: DEBUG
    java.sql.Statement: DEBUG
    java.sql.PreparedStatement: DEBUG
    java.sql.ResultSet: DEBUG
    org.hibernate: INFO
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      #defaultZone: http://discovery:8763/eureka/  # 指定注册中心的地址
      defaultZone: http://peer1:8761/eureka/,http://peer1:8762/eureka/
    healthcheck:
      enable: true
  instance:
    preferIpAddress: true
    health-check-url: http://provider:8000/info  # 健康检查的URL
    lease-renewal-interval-in-seconds: 10   # 续约更新时间间隔（默认30秒）
    lease-expiration-duration-in-seconds: 30  # 续约到期时间（默认90秒）
---
server:
    port: 8001
spring:
  profiles: pro
  application:
    name: microservice-provider-user # 项目名称尽量用小写
  datasource: # 指定数据源
    platform: mysql # 指定数据源类型
    url: jdbc:mysql://127.0.0.1:3306/springcloud
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 10
    minIdle: 5
    maxActive: 30
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #connectionProperties: druid.stat.mergeSql: true;druid.stat.slowSqlMillis: 5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
mybatis:
  config-location: classpath:/mybatis/mybatis-config.xml
  mapper-locations: classpath*:/mapper/*.xml
  type-aliases-package: com.itmuch.cloud.entity
  check-config-location: true
logging:
  level:
    root: INFO
    com.itmuch.cloud: INFO
    #DEBUG输出SQL并打印到控制台
    com.mybatis: DEBUG
    com.mybatis.common.jdbc.SimpleDataSource: DEBUG
    com.mybatis.common.jdbc.ScriptRunner: DEBUG
    com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate: DEBUG
    java.sql.Connection: DEBUG
    java.sql.Statement: DEBUG
    java.sql.PreparedStatement: DEBUG
    java.sql.ResultSet: DEBUG
    org.hibernate: INFO
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      #defaultZone: http://discovery:8763/eureka/  # 指定注册中心的地址
      defaultZone: http://peer1:8761/eureka/,http://peer1:8762/eureka/
    healthcheck:
      enable: true
  instance:
    preferIpAddress: true
    health-check-url: http://provider:8001/info  # 健康检查的URL
    lease-renewal-interval-in-seconds: 10   # 续约更新时间间隔（默认30秒）
    lease-expiration-duration-in-seconds: 30  # 续约到期时间（默认90秒）